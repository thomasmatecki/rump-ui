{"version":3,"sources":["/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/$_lazy_route_resource lazy","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.component.css","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.component.html","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.component.ts","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.module.ts","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/model/Svc.ts","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-entity/svc-entity.component.css","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-entity/svc-entity.component.html","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-entity/svc-entity.component.ts","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-property/svc-property.component.css","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-property/svc-property.component.html","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-property/svc-property.component.ts","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/environments/environment.ts","/home/thomas/Dropbox/Project Workspace/rump-ui/web/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content {\\n  padding: 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span>Service Builder</span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n\\n<mat-sidenav-container>\\n  <mat-sidenav mode=\\\"side\\\" opened=\\\"true\\\">\\n    <mat-list>\\n      <mat-list-item>Movies</mat-list-item>\\n    </mat-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content class=\\\"content\\\">\\n\\n    <app-svc-entity>\\n    </app-svc-entity>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, Input} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  @Input() name: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport {ReactiveFormsModule} from '@angular/forms';  // <-- #1 import module\n\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatListModule} from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport {AppComponent} from './app.component';\nimport {SvcEntityComponent} from './svc-entity/svc-entity.component';\nimport {SvcPropertyComponent} from './svc-property/svc-property.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SvcEntityComponent,\n    SvcPropertyComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatListModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatSidenavModule,\n    HttpClientModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/app.module.ts","/**\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\nexport enum Type {\n  String = 'string',\n  Integer = 'integer',\n  Float = 'Float'\n}\n\n\nexport class SvcProperty {\n\n  name: string;\n  dataType: Type\n}\n\nexport class SvcEntity {\n  name: String;\n  properties: SvcProperty[] = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/model/Svc.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-entity/svc-entity.component.css\n// module id = ../../../../../src/app/svc-entity/svc-entity.component.css\n// module chunks = main","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Movies</mat-card-title>\\n    <mat-card-subtitle>Version {{1}}</mat-card-subtitle>\\n\\n\\n  </mat-card-header>\\n  <mat-card-content>\\n    <mat-list>\\n      <mat-list-item *ngFor=\\\"let property of entity.properties;\\n                             let idx = index\\\">\\n        <div>\\n          <app-svc-property [property]=\\\"property\\\"\\n                            [formGroup]=\\\"propertyArray.controls[idx]\\\">\\n          </app-svc-property>\\n        </div>\\n      </mat-list-item>\\n    </mat-list>\\n    <button mat-mini-fab\\n            (click)=\\\"onAdd()\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button\\n            (click)=\\\"onSave()\\\">Save\\n    </button>\\n  </mat-card-actions>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-entity/svc-entity.component.html\n// module id = ../../../../../src/app/svc-entity/svc-entity.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {SvcEntity, SvcProperty, Type} from '../model/Svc';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material';\n\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-svc-entity',\n  templateUrl: './svc-entity.component.html',\n  styleUrls: ['./svc-entity.component.css']\n})\nexport class SvcEntityComponent implements OnInit {\n\n  entity: SvcEntity = new SvcEntity();\n  entityGroup: FormGroup;\n  propertyArray: FormArray = this.formBuilder.array([]);\n\n  constructor(private snackBar: MatSnackBar,\n              private http: HttpClient,\n              private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n\n    this.entity.name = \"movies\";\n\n    this.entityGroup = this.formBuilder.group({\n      properties: this.propertyArray\n    });\n\n    if (this.entity.properties.length == 0) {\n      this.appendProperty();\n    }\n  }\n\n  private appendProperty() {\n    this.propertyArray.push(\n      this.formBuilder.group({\n        name: ['', Validators.required],\n        dataType: ['', Validators.required]\n      })\n    );\n\n    this.entity.properties.push(new SvcProperty())\n  }\n\n  onAdd() {\n    this.appendProperty()\n  }\n\n  onSave() {\n\n    this.http.post<SvcEntity>('/api/SvcEntity', this.entity).subscribe(data => {\n      // Read the result field from the JSON response.\n    });\n    /*    if (this.entityGroup.invalid) {\n          this.snackBar.open(\"Looks Like There's An Error!\", 'Dismiss');\n        } else {\n        }\n        console.log(\"Save Pressed\");*/\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-entity/svc-entity.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-property/svc-property.component.css\n// module id = ../../../../../src/app/svc-property/svc-property.component.css\n// module chunks = main","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\n  <mat-form-field>\\n    <input matInput\\n           [(ngModel)]=\\\"property.name\\\"\\n           placeholder=\\\"Property Name\\\"\\n           formControlName=\\\"name\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select [(value)]=\\\"property.dataType\\\"\\n                placeholder=\\\"Data Type\\\"\\n                formControlName=\\\"dataType\\\">\\n      <mat-option\\n        *ngFor=\\\"let propType of propTypes\\\"\\n        [value]=\\\"propType.value\\\">\\n        {{propType.viewValue}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-property/svc-property.component.html\n// module id = ../../../../../src/app/svc-property/svc-property.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\n\nimport {SvcProperty, Type} from '../model/Svc';\nimport {FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-svc-property',\n  templateUrl: './svc-property.component.html',\n  styleUrls: ['./svc-property.component.css']\n})\nexport class SvcPropertyComponent implements OnInit {\n\n  @Input() property: SvcProperty;\n  @Input() formGroup: FormGroup;\n\n  propTypes = [\n    {value: Type.Integer, viewValue: \"Integer\"},\n    {value: Type.Float, viewValue: \"Float\"},\n    {value: Type.String, viewValue: \"String\"}\n  ];\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    // this.formGroup = this.formBuilder.group({\n    //   name: ['', Validators.required],\n    //   dataType: ['', Validators.required]\n    // });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/app/svc-property/svc-property.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/thomas/Dropbox/Project Workspace/rump-ui/web/src/main.ts"],"sourceRoot":"webpack:///"}